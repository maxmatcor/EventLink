package controler;

import java.awt.Event;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import model.eventData;
import model.userData;
import DAO.Conexion;
import DAO.Events;

/**
 * Servlet implementation class eventControler
 */
public class eventControler extends HttpServlet {
	private static final long serialVersionUID = 1L;

	public eventControler() {
		super();

	}

	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {

		HttpSession sesion = request.getSession(true);
		Events event = Events.getInstace();
		String action = request.getParameter("action");
		String idstr = request.getParameter("id");
		eventData eventdata = null;

		if ("delete".equals(action)) {
			if (idstr != null) {
				int id = Integer.parseInt(idstr);
				Object result=event.DeleteEvent(id);
				
				if(result==null){
					sesion.setAttribute("msg", "1");
				}else{
					sesion.setAttribute("msg", "0");
				}
				
			}
		} else if ("select".equals(action)) {
			if (idstr != null) {
				int id = Integer.parseInt(idstr);
				eventdata = event.findById(id);
				request.setAttribute("eventdatas", eventdata);
				String nextJSP = "/editupdate.jsp";
				RequestDispatcher dispatcher = getServletContext()
						.getRequestDispatcher(nextJSP);
				dispatcher.forward(request, response);
			}

		} else if ("FindBySus".equals(action)) {
			int idevent = Integer.parseInt(idstr);
			ArrayList<userData> userdatas = event.FindBySus(idevent);
			request.setAttribute("userdatas", userdatas);

			String nextJSP = "/editListSus.jsp";
			RequestDispatcher dispatcher = getServletContext()
					.getRequestDispatcher(nextJSP);
			dispatcher.forward(request, response);
		} else if ("selectAdmin".equals(action)) {		//SELECCIONA UN EVENTO Y LO HABILITA A EDITARLO
			if (idstr != null) {
				int id = Integer.parseInt(idstr);
				eventdata = event.findById(id);
				request.setAttribute("eventdatas", eventdata);
				String nextJSP = "/adminEventUpdate.jsp"; //LO LLEVA AL JSP DE EDICION DE EVENTO 
				RequestDispatcher dispatcher = getServletContext()
						.getRequestDispatcher(nextJSP);
				dispatcher.forward(request, response);
			}
		}

		String idUserstr = (String) sesion.getAttribute("iduser");
		int idUser = Integer.parseInt(idUserstr);
		ArrayList<eventData> eventdatas = event.findByUser(idUser);
		request.setAttribute("eventdatas", eventdatas);

		String nextJSP = "/editlist.jsp";
		RequestDispatcher dispatcher = getServletContext()
				.getRequestDispatcher(nextJSP);
		dispatcher.forward(request, response);

	}

	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		HttpSession sesion = request.getSession(true);
		Events event = Events.getInstace();
		String nombreEve = request.getParameter("nombreEve");
		String lugarEve = request.getParameter("lugarEve");
		String tipoEve = request.getParameter("tipoEve");
		String fechaEve = request.getParameter("fechaEve");
		String fechaFinEve = request.getParameter("fechaFinEve");
		String descripcionEve = request.getParameter("descripcionEve");
		String id = (String) sesion.getAttribute("iduser");
		String statusstr = (String) request.getParameter("status");
		String ideventstr = (String) request.getParameter("id");
		String action = request.getParameter("action");
		eventData eventdata = null;

		if ("update".equals(action)) {
			if (ideventstr != null) {
				int iduser = Integer.parseInt(id);
				int idevento = Integer.parseInt(ideventstr);
				int status = 1;
				eventdata = new eventData(idevento, iduser, nombreEve,
						lugarEve, tipoEve, fechaEve, fechaFinEve,
						descripcionEve, status);
				Object result = event.UpdateEvent(idevento, eventdata);
				if(result==null){
					sesion.setAttribute("msg", "1");
				}else{
					sesion.setAttribute("msg", "0");
				}
				String nextJSP = "/editupdate.jsp";
				RequestDispatcher dispatcher = getServletContext()
						.getRequestDispatcher(nextJSP);
				dispatcher.forward(request, response);				
			}
		} else if ("updateAdmin".equals(action)) {
			int iduser = Integer.parseInt(id);
			int idevento = Integer.parseInt(ideventstr);
			int status = Integer.parseInt(statusstr);
			eventdata = new eventData(idevento, iduser, nombreEve, lugarEve,
					tipoEve, fechaEve, fechaFinEve, descripcionEve, status);
			 Object result= event.UpdateEvent(idevento, eventdata);
			 if(result==null){
					sesion.setAttribute("msg", "1");
				}else{
					sesion.setAttribute("msg", "0");
				}
			ArrayList<eventData> eventdatas = event.FindAll();
			request.setAttribute("eventdatas", eventdatas);
			String nextJSP = "/adminEvents.jsp";
			RequestDispatcher dispatcher = getServletContext()
					.getRequestDispatcher(nextJSP);
			dispatcher.forward(request, response);

		} else if ("create".equals(action)) {
			if (id != null) {
				int iduser = Integer.parseInt(id);
				int status = 1;
				eventdata = new eventData(iduser, nombreEve, lugarEve, tipoEve,
						fechaEve, fechaFinEve, descripcionEve, status);
				Object result=event.CreateEvent(eventdata);
				if(result==null){
					sesion.setAttribute("msg", "1");
				}else{
					sesion.setAttribute("msg", "0");
				}
				String nextJSP = "/editalta.jsp";
				RequestDispatcher dispatcher = getServletContext()
						.getRequestDispatcher(nextJSP);
				dispatcher.forward(request, response);
			} 
		} else if ("FindAll".equals(action)) {

			ArrayList<eventData> eventdatas = event.FindAll();
			request.setAttribute("eventdatas", eventdatas);
			String nextJSP = "/adminEvents.jsp";
			RequestDispatcher dispatcher = getServletContext()
					.getRequestDispatcher(nextJSP);
			dispatcher.forward(request, response);

		}else if ("realDelete".equals(action)) {
			if (ideventstr != null) {
				int idevent = Integer.parseInt(ideventstr);
				Object result=event.RealDeleteEvent(idevent);
				if(result==null){
					sesion.setAttribute("msg", "2");
				}else{
					sesion.setAttribute("msg", "0");
				}
				ArrayList<eventData> eventdatas = event.FindAll();
				request.setAttribute("eventdatas", eventdatas);
				String nextJSP = "/adminEvents.jsp";
				RequestDispatcher dispatcher = getServletContext()
						.getRequestDispatcher(nextJSP);
				dispatcher.forward(request, response);
			}
		}
		doGet(request, response);
	}
}
